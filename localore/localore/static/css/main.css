@charset "UTF-8";
html {
  box-sizing: border-box; }

*, *::after, *::before {
  box-sizing: inherit; }

/*!
Typeplate : Starter Kit
URL ........... http://typeplate.com
Version ....... 3.0.1
Github ........ https://github.com/typeplate/starter-kit
Authors ....... Dennis Gaebel (@gryghostvisuals) & Zachary Kain (@zakkain)
License ....... Creative Commmons Attribution 3.0
License URL ... https://github.com/typeplate/starter-kit/blob/master/license.txt
*/
@font-face {
  font-family: "Ampersand";
  src: local("Georgia"), local("Garamond"), local("Palatino"), local("Book Antiqua");
  unicode-range: U+0026; }

@font-face {
  font-family: "Ampersand";
  src: local("Georgia");
  unicode-range: U+270C; }

.typl8-tera, .typl8-giga, .typl8-mega, h1, .typl8-alpha, h2, .typl8-beta, h3, .typl8-gamma, h4, .typl8-delta, h5, .typl8-epsilon, .typl8-zeta, h6 {
  text-rendering: optimizeLegibility;
  line-height: 1;
  margin-top: 0;
  color: #222; }

blockquote + figcaption cite {
  display: block;
  font-size: inherit;
  text-align: right; }

body {
  word-wrap: break-word; }

pre code {
  word-wrap: normal; }

html {
  font: normal 100% / 1.65 serif; }

body {
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  -ms-hyphens: auto;
  hyphens: auto;
  color: #444; }

.typl8-tera {
  font-size: 7.3125em;
  margin-bottom: 4.4318181818rem; }

.typl8-giga {
  font-size: 5.625em;
  margin-bottom: 3.4090909091rem; }

.typl8-mega, h1 {
  font-size: 4.5em;
  margin-bottom: 2.7272727273rem; }

.typl8-alpha, h2 {
  font-size: 3.75em;
  margin-bottom: 2.2727272727rem; }

.typl8-beta, h3 {
  font-size: 3em;
  margin-bottom: 1.8181818182rem; }

.typl8-gamma, h4 {
  font-size: 2.25em;
  margin-bottom: 1.3636363636rem; }

.typl8-delta, h5 {
  font-size: 1.5em;
  margin-bottom: 0.9090909091rem; }

.typl8-epsilon {
  font-size: 1.3125em;
  margin-bottom: 0.7954545455rem; }

.typl8-zeta, h6 {
  font-size: 1.125em;
  margin-bottom: 0.6818181818rem; }

p {
  margin: auto auto 0; }
  p + p {
    text-indent: 0;
    margin-top: 0; }

small {
  font-size: 65%; }

input,
abbr,
acronym,
blockquote,
code,
kbd,
q,
samp,
var {
  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  hyphens: none; }

pre {
  white-space: pre; }
  pre code {
    white-space: -moz-pre-wrap;
    white-space: pre-wrap; }

code {
  white-space: pre;
  font-family: monospace; }

abbr {
  -webkit-font-variant: small-caps;
  -moz-font-variant: small-caps;
  -ms-font-variant: small-caps;
  font-variant: small-caps;
  font-weight: 600;
  text-transform: lowercase;
  color: gray; }
  abbr[title]:hover {
    cursor: help; }

.typl8-drop-cap:first-letter {
  float: left;
  margin: 10px 10px 0 0;
  padding: 0 20px;
  font-size: 4em;
  font-family: inherit;
  line-height: 1;
  text-indent: 0;
  background: transparent;
  color: inherit; }

p + .typl8-drop-cap {
  text-indent: 0;
  margin-top: 0; }

/**
 * Lining Definition Style Markup
 *
  <dl class="typl8-lining">
    <dt><b></b></dt>
    <dd></dd>
  </dl>
 *
 * Extend this object into your markup.
 *
 */
.typl8-lining dt,
.typl8-lining dd {
  display: inline;
  margin: 0; }

.typl8-lining dt + dt:before,
.typl8-lining dd + dt:before {
  content: "\A";
  white-space: pre; }

.typl8-lining dd + dd:before {
  content: ", "; }

.typl8-lining dd:before {
  content: ": ";
  margin-left: -0.2rem; }

/**
 * Dictionary Definition Style Markup
 *
  <dl class="typl8-dictionary-style">
    <dt><b></b></dt>
    <dd></dd>
  </dl>
 *
 * Extend this object into your markup.
 *
 */
.typl8-dictionary-style dt {
  display: inline;
  counter-reset: definitions; }
  .typl8-dictionary-style dt + dt:before {
    content: ", ";
    margin-left: -0.2rem; }

.typl8-dictionary-style dd {
  display: block;
  counter-increment: definitions; }
  .typl8-dictionary-style dd:before {
    content: counter(definitions, decimal) ". "; }

/**
 * Blockquote Markup
 *
    <figure>
      <blockquote cite="">
        <p></p>
      </blockquote>
      <figcaption>
        <cite>
          <small><a href=""></a></small>
        </cite>
      </figcaption>
    </figure>
 *
 * Extend this object into your markup.
 *
 */
/**
 * Pull Quotes Markup
 *
  <aside class="typl8-pull-quote">
    <blockquote>
      <p></p>
    </blockquote>
  </aside>
 *
 * Extend this object into your custom stylesheet.
 *
 */
.typl8-pull-quote {
  position: relative;
  padding: 1em; }
  .typl8-pull-quote:before, .typl8-pull-quote:after {
    height: 1em;
    opacity: 0.5;
    position: absolute;
    font-size: 4em;
    color: #dc976e; }
  .typl8-pull-quote:before {
    content: '“';
    top: 0;
    left: 0; }
  .typl8-pull-quote:after {
    content: '”';
    bottom: 0;
    right: 0; }

/**
 * Figures Markup
 *
  <figure>
    <figcaption>
      <strong>Fig. X.X | </strong><cite title=""></cite>
    </figcaption>
  </figure>
 *
 * Extend this object into your markup.
 *
 */
/**
 * Footnote Markup : Replace 'X' with your unique number for each footnote
 *
  <article>
    <p><sup><a href="#fn-itemX" id="fn-returnX"></a></sup></p>
    <footer>
      <ol class="foot-notes">
        <li id="fn-itemX"><a href="#fn-returnX">↩</a></li>
      </ol>
    </footer>
  </article>
 *
 * Extend this object into your markup.
 *
 */
/*!
 * Bootstrap v3.3.6 (http://getbootstrap.com)
 * Copyright 2011-2015 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */
.fade {
  opacity: 0;
  -webkit-transition: opacity 0.15s linear;
  -moz-transition: opacity 0.15s linear;
  transition: opacity 0.15s linear; }
  .fade.in {
    opacity: 1; }

.collapse {
  display: none; }
  .collapse.in {
    display: block; }

tr.collapse.in {
  display: table-row; }

tbody.collapse.in {
  display: table-row-group; }

.collapsing {
  position: relative;
  height: 0;
  overflow: hidden;
  -webkit-transition-property: height, visibility;
  -moz-transition-property: height, visibility;
  transition-property: height, visibility;
  -webkit-transition-duration: 0.35s;
  -moz-transition-duration: 0.35s;
  transition-duration: 0.35s;
  -webkit-transition-timing-function: ease;
  -moz-transition-timing-function: ease;
  transition-timing-function: ease; }

.embed-responsive {
  position: relative;
  display: block;
  height: 0;
  padding: 0;
  overflow: hidden; }
  .embed-responsive .embed-responsive-item,
  .embed-responsive iframe,
  .embed-responsive embed,
  .embed-responsive object,
  .embed-responsive video {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    height: 100%;
    width: 100%;
    border: 0; }

.embed-responsive-16by9 {
  padding-bottom: 56.25%; }

.embed-responsive-4by3 {
  padding-bottom: 75%; }

/* Mixin */
.clearfix::after {
  clear: both;
  content: "";
  display: table; }

.pull-right {
  float: right !important; }

.pull-left {
  float: left !important; }

.invisible {
  visibility: hidden; }

.hidden {
  display: none !important; }

ul,
ol {
  margin-top: 0;
  margin-bottom: 10px; }
  ul ul,
  ul ol,
  ol ul,
  ol ol {
    margin-bottom: 0; }

.list-unstyled {
  padding-left: 0;
  list-style: none; }

.list-inline {
  padding-left: 0;
  list-style: none;
  margin-left: -5px; }
  .list-inline > li {
    display: inline-block;
    margin-right: -4px;
    padding-left: 5px;
    padding-right: 5px; }

*, :after, :before {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

html, body, #view {
  width: 100%;
  overflow-x: hidden; }

body {
  background: #fff;
  font-family: "Roboto Slab", serif;
  color: #57585a; }
  body.intro {
    height: 100vh;
    overflow: hidden; }

.container {
  max-width: 48em;
  margin-left: auto;
  margin-right: auto;
  padding-top: 4em;
  padding-bottom: 4em;
  position: relative; }
  .container::after {
    clear: both;
    content: "";
    display: table; }
  @media screen and (max-width: 48em) {
    .container {
      padding: 3em 1.5em 3em 1.5em; } }
  @media screen and (max-width: 35.5em) {
    .container {
      padding: 3em 1em 3em 1em; } }

.container-full {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto; }
  .container-full::after {
    clear: both;
    content: "";
    display: table; }

.fade-big {
  position: absolute;
  width: 100%;
  z-index: 0;
  height: 100vh;
  background-image: -webkit-linear-gradient(top, rgba(75, 75, 75, 0.25) 0%, transparent 100%);
  background-image: linear-gradient(to bottom, rgba(75, 75, 75, 0.25) 0%, transparent 100%); }

.description {
  background: url("/static/images/header_bg.png") fixed;
  background-size: 130%;
  background-position: top center;
  background-repeat: no-repeat;
  height: 270px;
  width: 100%;
  position: relative; }
  .description .rich-text {
    max-width: 48em;
    margin-left: auto;
    margin-right: auto;
    position: absolute;
    bottom: 25px;
    left: 0;
    right: 0; }
    .description .rich-text::after {
      clear: both;
      content: "";
      display: table; }
    .description .rich-text p {
      color: #000;
      text-align: center; }
  @media screen and (max-width: 925px) {
    .description {
      background: url("/static/images/header_bg_tablet.png");
      background-size: 100%;
      background-repeat: no-repeat;
      height: auto; }
      .description .rich-text {
        position: static; }
        .description .rich-text p {
          padding: 2em 2.3576515979% 2em 2.3576515979%; } }
  @media screen and (min-width: 64em) {
    .description {
      background-size: 100%; } }
  @media screen and (max-width: 35.5em) {
    .description {
      background-size: 200%; } }

.accessible.clicked {
  outline: none; }

.text-description {
  background-color: #B8B7B7; }

.text-center {
  text-align: center; }

hr {
  box-sizing: content-box;
  border: 0;
  height: 0;
  border-top: 1px solid #979797; }

a {
  font-family: "Roboto Slab", serif;
  color: #f16736;
  text-decoration: none; }
  a:hover {
    text-decoration: underline; }
  a.link-large {
    font-size: 1.5em; }

h1, h2, h3, h4, h5, h6 {
  font-weight: normal; }
  .block-paragraph h1, .block-heading h1, .rich-text h1, .block-paragraph h2, .block-heading h2, .rich-text h2, .block-paragraph h3, .block-heading h3, .rich-text h3, .block-paragraph h4, .block-heading h4, .rich-text h4, .block-paragraph h5, .block-heading h5, .rich-text h5, .block-paragraph h6, .block-heading h6, .rich-text h6 {
    text-align: center; }

h6 {
  font-family: "Roboto", serif;
  text-transform: uppercase;
  letter-spacing: 4px;
  text-align: center; }

.j-loading {
  border-color: #f16736 !important; }
  .j-loading:before {
    background-color: #f16736 !important; }

.j-filters {
  display: none !important; }

.juicer-feed.image-grid .j-poster {
  visibility: visible !important;
  opacity: 1 !important; }

.juicer-button {
  font-size: 1em !important;
  border-radius: 7px !important;
  padding: .8em !important;
  font-family: "Roboto Slab", serif !important;
  text-transform: capitalize !important;
  border-color: #f16736 !important;
  color: #f16736 !important; }
  .juicer-button:hover {
    background-color: #f16736 !important;
    color: #fff !important; }

.juicer-feed.slider .slick-prev:hover:before, .juicer-feed.slider .slick-next:hover:before {
  color: #f16736 !important; }

.juicer-feed.image-grid .j-text .j-message a, .juicer-feed.slider .j-text .j-message a, .juicer-feed.hip .j-text .j-message a {
  color: #f16736 !important; }

.browsehappy {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0; }

.rich-text img, .block-image img {
  display: block;
  max-width: 100%;
  height: auto;
  margin: 0 auto; }

.prod-content .rich-text p, .prod-content .rich-text .responsive-object {
  width: 80%;
  margin: 2rem auto; }

.block-raw_html, .block-paragraph, .block-quote, .block-image, .block-embed {
  width: 80%;
  margin: 3rem auto; }

.responsive-object {
  position: relative; }

.responsive-object iframe,
.responsive-object object,
.responsive-object embed {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  margin-left: auto;
  margin-right: auto; }
  .responsive-object iframe.embedly-embed:not([src*='soundcloud']),
  .responsive-object object.embedly-embed:not([src*='soundcloud']),
  .responsive-object embed.embedly-embed:not([src*='soundcloud']) {
    height: 100%; }
  .responsive-object iframe[src*='youtube'],
  .responsive-object object[src*='youtube'],
  .responsive-object embed[src*='youtube'] {
    height: 100%; }
  .responsive-object iframe[src*='instagram'], .responsive-object iframe[src*='soundcloud'],
  .responsive-object object[src*='instagram'],
  .responsive-object object[src*='soundcloud'],
  .responsive-object embed[src*='instagram'],
  .responsive-object embed[src*='soundcloud'] {
    position: static;
    width: 100% !important;
    max-width: 100% !important; }

.block-embed .fb-post, .block-paragraph .fb-post {
  display: table;
  margin-left: auto;
  margin-right: auto; }

.block-caption {
  display: inline;
  text-align: center;
  position: relative;
  top: -2.5rem; }
  .block-caption .rich-text p {
    font-size: 90%; }
  .block-caption .rich-text p, .block-caption .rich-text a {
    font-family: "Roboto", serif; }
  .block-caption + .block-embed,
  .block-caption + .block-image,
  .block-caption + .block-raw_html,
  .block-caption + .block-quote,
  .block-caption + .block-paragraph {
    margin-top: 0; }

.block-quote {
  border-top: 1px solid #B8B7B7;
  border-bottom: 1px solid #B8B7B7; }
  .block-quote blockquote {
    position: relative;
    margin-left: 20px;
    margin-right: 20px;
    font-size: 1.4em;
    line-height: 1.4;
    font-weight: 300; }
    .block-quote blockquote span {
      display: block;
      text-align: right;
      font-size: 0.75em; }
    @media screen and (max-width: 35.5em) {
      .block-quote blockquote {
        margin-left: 0;
        margin-right: 0;
        font-size: 1.25em; } }

.modal-open {
  padding-right: 0 !important; }

.modal {
  display: none;
  overflow: hidden;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1050;
  -webkit-overflow-scrolling: touch;
  outline: 0; }

.modal.fade .modal-dialog {
  -webkit-transform: translate(-50%, -75%);
  -ms-transform: translate(-50%, -75%);
  -o-transform: translate(-50%, -75%);
  transform: translate(-50%, -75%);
  -webkit-transition: -webkit-transform 0.3s ease-out;
  -o-transition: -o-transform 0.3s ease-out;
  transition: transform 0.3s ease-out; }

.modal.in .modal-dialog {
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%); }

.modal-open .modal {
  overflow-x: hidden;
  overflow-y: auto; }

.modal-dialog {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 75%; }

.modal-content {
  position: relative;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  outline: 0; }

.modal-backdrop {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1040;
  background-color: #000000; }

.modal-backdrop.fade {
  opacity: 0;
  filter: alpha(opacity=0); }

.modal-backdrop.in {
  opacity: 0.8;
  filter: alpha(opacity=50); }

.modal-title {
  margin: 0;
  line-height: 1.42857143; }

.modal-body {
  position: relative; }

.modal-close {
  position: absolute;
  top: 0%;
  right: 2%;
  opacity: 0.6;
  -webkit-transition: all 200ms ease;
  -moz-transition: all 200ms ease;
  transition: all 200ms ease; }
  .modal-close:hover {
    cursor: pointer;
    opacity: 1; }
    .modal-close:hover a {
      text-decoration: none; }
  .modal-close span {
    font-size: 6.875em;
    line-height: 80px;
    font-weight: 100; }

.modal-scrollbar-measure {
  position: absolute;
  top: -9999px;
  width: 50px;
  height: 50px;
  overflow: scroll; }

@media (min-width: 768px) {
  .modal-dialog {
    margin: auto; }
  .modal-sm {
    width: 300px; } }

@media (min-width: 992px) {
  .modal-lg {
    width: 900px; } }

.clearfix:before,
.clearfix:after,
.modal-header:before,
.modal-header:after,
.modal-footer:before,
.modal-footer:after {
  content: " ";
  display: table; }

.clearfix:after,
.modal-header:after,
.modal-footer:after {
  clear: both; }

.center-block {
  display: block;
  margin-left: auto;
  margin-right: auto; }

header {
  padding: 1.5em 1.5em;
  width: 100%;
  height: 85px;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 20;
  -webkit-transition: opacity 600ms ease-out;
  -moz-transition: opacity 600ms ease-out;
  transition: opacity 600ms ease-out;
  -webkit-transition: -webkit-transform 1s cubic-bezier(0.075, 0.82, 0.165, 1);
  -moz-transition: -moz-transform 1s cubic-bezier(0.075, 0.82, 0.165, 1);
  transition: transform 1s cubic-bezier(0.075, 0.82, 0.165, 1);
  background-color: transparent; }
  header.scrolled {
    -webkit-transition: -webkit-transform 2.5s cubic-bezier(0.075, 0.82, 0.165, 1);
    -moz-transition: -moz-transform 2.5s cubic-bezier(0.075, 0.82, 0.165, 1);
    transition: transform 2.5s cubic-bezier(0.075, 0.82, 0.165, 1);
    -webkit-transform: translateY(-127.5px);
    -moz-transform: translateY(-127.5px);
    -ms-transform: translateY(-127.5px);
    -o-transform: translateY(-127.5px);
    transform: translateY(-127.5px); }
  header.hide {
    opacity: 0; }
  header .header-section-right {
    height: 100%;
    float: right; }
  header:after {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    height: 185px;
    background-image: -webkit-linear-gradient(top, rgba(21, 19, 19, 0.65) 0%, transparent 100%);
    background-image: linear-gradient(to bottom, rgba(21, 19, 19, 0.65) 0%, transparent 100%); }
  @media screen and (max-width: 925px) {
    header {
      background-color: rgba(0, 0, 0, 0.6); }
      .template-homepage header {
        background-color: transparent; } }
  @media screen and (max-width: 35.5em) {
    header {
      padding: 1em 1em 1.5em 1em; } }
  header .nav-section {
    height: 100%;
    margin: 0 auto;
    position: relative;
    max-width: 80em;
    margin-left: auto;
    margin-right: auto; }
    header .nav-section::after {
      clear: both;
      content: "";
      display: table; }
    header .nav-section .logo {
      position: relative;
      top: 50%;
      -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
      transform: translateY(-50%);
      -webkit-transition: all 250ms ease-in-out;
      -moz-transition: all 250ms ease-in-out;
      transition: all 250ms ease-in-out; }
      header .nav-section .logo svg, header .nav-section .logo img {
        max-height: 100%;
        max-width: 100%; }
    header .nav-section .menu-icon {
      float: left;
      height: 60%;
      width: 25px;
      margin-right: 25px;
      position: relative;
      top: 4px;
      -webkit-transition: all 150ms ease-out;
      -moz-transition: all 150ms ease-out;
      transition: all 150ms ease-out;
      -webkit-transform-origin: center top;
      -moz-transform-origin: center top;
      -ms-transform-origin: center top;
      -o-transform-origin: center top;
      transform-origin: center top; }
      header .nav-section .menu-icon:hover {
        -webkit-transform: scaleY(1.2);
        -moz-transform: scaleY(1.2);
        -ms-transform: scaleY(1.2);
        -o-transform: scaleY(1.2);
        transform: scaleY(1.2);
        cursor: pointer; }
      header .nav-section .menu-icon span {
        width: 100%;
        height: 15%;
        background-color: #f16736;
        position: absolute; }
        header .nav-section .menu-icon span:nth-child(1) {
          top: 0; }
        header .nav-section .menu-icon span:nth-child(2) {
          top: 50%;
          -webkit-transform: translateY(-50%);
          -moz-transform: translateY(-50%);
          -ms-transform: translateY(-50%);
          -o-transform: translateY(-50%);
          transform: translateY(-50%); }
        header .nav-section .menu-icon span:nth-child(3) {
          bottom: 0; }
      @media screen and (max-width: 35.5em) {
        header .nav-section .menu-icon {
          top: 20%;
          margin-right: 1em;
          -webkit-transform-origin: center;
          -moz-transform-origin: center;
          -ms-transform-origin: center;
          -o-transform-origin: center;
          transform-origin: center; } }
    header .nav-section .search-icon {
      background: url("/static/images/search.svg");
      background-position: center;
      background-repeat: no-repeat;
      display: inline-block;
      vertical-align: top;
      width: 20px;
      height: 100%;
      margin-right: 25px; }
      header .nav-section .search-icon:hover {
        cursor: pointer; }
      @media screen and (max-width: 35.5em) {
        header .nav-section .search-icon {
          margin-right: 1em; } }
    header .nav-section .fa-logo {
      float: left;
      height: 100%;
      width: inherit; }
      @media screen and (max-width: 35.5em) {
        header .nav-section .fa-logo {
          height: 75%; } }
    header .nav-section .air-logo {
      display: inline-block;
      vertical-align: middle;
      height: 120%; }
      @media screen and (max-width: 35.5em) {
        header .nav-section .air-logo {
          height: 90%; } }

footer {
  padding: 4em 3em;
  background-color: #000; }
  @media screen and (max-width: 35.5em) {
    footer {
      padding: 3em 1.5em; } }
  footer > div {
    max-width: 80em;
    margin-left: auto;
    margin-right: auto; }
    footer > div::after {
      clear: both;
      content: "";
      display: table; }
    footer > div > div.row {
      display: block; }
      footer > div > div.row::after {
        clear: both;
        content: "";
        display: table; }
      footer > div > div.row:not(:last-of-type) {
        margin-bottom: 3em; }
      @media screen and (max-width: 48em) {
        footer > div > div.row > div {
          display: table;
          float: none;
          margin: 0 auto 35px auto; }
        footer > div > div.row:not(:last-of-type) {
          margin-bottom: 0; } }
  footer .email-signup {
    float: left;
    width: 400px; }
    @media screen and (max-width: 35.5em) {
      footer .email-signup {
        width: 100%; } }
    footer .email-signup form {
      position: relative;
      width: 100%;
      height: 35px;
      padding-bottom: 5px;
      border-bottom: 2px solid #fff; }
      footer .email-signup form input {
        position: absolute;
        height: 35px;
        display: inline-block;
        border: 0;
        background-color: transparent;
        font-size: 15px;
        font-family: "Roboto";
        font-weight: 100;
        line-height: 1.53333333;
        color: #fff; }
        footer .email-signup form input:focus {
          outline: none; }
        footer .email-signup form input[type="email"] {
          width: 85%; }
        footer .email-signup form input[type="submit"] {
          height: 30px;
          right: 0;
          padding: 4px 10px;
          border-radius: 5px;
          margin-bottom: 0;
          font-weight: normal;
          text-align: center;
          vertical-align: middle;
          -ms-touch-action: manipulation;
          touch-action: manipulation;
          cursor: pointer;
          background-image: none;
          border: 1px solid #fff;
          white-space: nowrap;
          -webkit-user-select: none;
          -moz-user-select: none;
          -ms-user-select: none;
          user-select: none; }
          footer .email-signup form input[type="submit"]:hover {
            background: #fff;
            color: #000; }
  footer .footer-social-links {
    float: right; }
    @media screen and (max-width: 48em) {
      footer .footer-social-links {
        float: none;
        margin: 0 auto; } }
    footer .footer-social-links span {
      display: inline-block;
      vertical-align: top;
      font-family: "Roboto", serif;
      line-height: 35px;
      margin-right: 15px; }
      @media screen and (max-width: 35.5em) {
        footer .footer-social-links span {
          display: none; } }
    footer .footer-social-links a {
      display: inline-block;
      opacity: 0.8; }
      footer .footer-social-links a:hover {
        opacity: 1; }
      footer .footer-social-links a:not(:last-of-type) {
        margin-right: 20px; }
      footer .footer-social-links a img {
        height: 35px; }
  footer .copyright {
    float: left;
    color: #fff;
    font-family: "Roboto", serif;
    font-size: 14px;
    line-height: 35px; }
    footer .copyright a {
      font-family: "Roboto", serif;
      color: #fff;
      text-decoration: underline; }
    @media screen and (max-width: 35.5em) {
      footer .copyright {
        font-size: 75%;
        line-height: 1.2; } }
  footer .funders {
    float: right; }
    @media screen and (max-width: 35.5em) {
      footer .funders {
        display: inline-block;
        text-align: center; }
        footer .funders a {
          padding-bottom: 10px; } }
    footer .funders a {
      display: inline-block; }
      footer .funders a:not(:last-of-type) {
        margin-right: 20px; }
      footer .funders a img {
        height: 35px; }

.live-feed {
  width: 100%;
  background-color: #4A4A4A;
  padding-top: 2em;
  padding-bottom: 2em; }
  .live-feed h4, .live-feed p {
    color: #fff;
    text-align: center; }

#menu .modal-content {
  box-shadow: none;
  border: none; }

#menu .modal-body {
  text-align: center;
  font-size: 2.25em; }
  @media screen and (max-width: 35.5em) {
    #menu .modal-body {
      font-size: 1.75em;
      line-height: 1.1; }
      #menu .modal-body li {
        margin-top: 15px;
        margin-bottom: 15px; } }

#menu .modal-close {
  position: static;
  text-align: center;
  opacity: 1; }
  #menu .modal-close:hover {
    cursor: default; }
  #menu .modal-close span {
    line-height: 50px; }

#menu a {
  -webkit-transition: color 300ms ease-out;
  -moz-transition: color 300ms ease-out;
  transition: color 300ms ease-out; }
  #menu a:hover {
    text-decoration: none;
    cursor: pointer;
    color: #fff; }

.team-section {
  margin-top: 3rem; }
  .team-section .team-item {
    text-align: center;
    margin-bottom: 3rem; }
    .team-section .team-item .team-location {
      font-family: "Roboto", serif;
      font-weight: 100;
      text-transform: uppercase;
      letter-spacing: 2px; }
    .team-section .team-item .team-name {
      display: inline-block;
      font-family: "Roboto Slab", serif;
      font-weight: 400;
      margin-bottom: 2.5rem; }
      .team-section .team-item .team-name:hover {
        text-decoration: underline; }
    .team-section .team-item .team-collapse-toggle {
      font-size: 36px;
      line-height: 1; }

.team-members {
  display: block;
  text-align: center; }
  .team-members::after {
    clear: both;
    content: "";
    display: table; }
  .team-members .team-member {
    width: 33.3%;
    display: inline-block;
    margin-left: -4px;
    vertical-align: top;
    padding: 0 2.3576515979% 4.7153031959% 2.3576515979%;
    text-align: left; }
    .team-members .team-member > img {
      width: 75%;
      margin: 0 auto 15px auto;
      border-radius: 100%;
      display: block;
      max-width: 100%;
      height: auto; }
    @media screen and (max-width: 35.5em) {
      .team-members .team-member {
        width: 100%;
        margin-bottom: 25px; }
        .team-members .team-member > img {
          width: 50%; } }
    .team-members .team-member h6.team-member-name {
      text-align: center;
      font-family: "Roboto Slab", serif;
      color: #646464;
      margin-bottom: 5px;
      letter-spacing: 0;
      text-transform: none;
      font-weight: 600; }
    .team-members .team-member .team-member-title {
      text-align: center;
      font-family: "Roboto Slab", serif;
      color: #000;
      font-weight: 100;
      font-size: 0.9375em;
      margin-bottom: 10px;
      line-height: 1.2; }
    .team-members .team-member ul.team-member-links {
      border: 1px solid blue; }
    .team-members .team-member .team-member-desc {
      font-family: "Roboto", serif;
      font-size: 0.875em;
      line-height: 1.3; }

.mission-section {
  background-color: #d8d8d8; }
  .mission-section .mission-airlogo {
    float: left;
    display: block;
    margin-right: 2.3576515979%;
    width: 23.2317613015%; }
    .mission-section .mission-airlogo:last-child {
      margin-right: 0; }
    .mission-section .mission-airlogo img {
      width: 75%;
      height: auto; }
  .mission-section .mission-desc {
    float: left;
    display: block;
    margin-right: 2.3576515979%;
    width: 74.4105871005%; }
    .mission-section .mission-desc:last-child {
      margin-right: 0; }
    .mission-section .mission-desc h5 {
      margin-top: 2em;
      margin-bottom: 0;
      line-height: 1.65;
      font-weight: 600;
      font-size: 1.2em;
      color: #4A4A4A; }
  @media screen and (max-width: 35.5em) {
    .mission-section .mission-airlogo, .mission-section .mission-desc {
      width: 100%; }
    .mission-section .mission-airlogo img {
      display: block;
      width: 30%;
      margin: 0 auto 2em auto; } }

.template-about-contact #view .container .rich-text {
  text-align: center; }

.title {
  position: fixed;
  width: 400px;
  height: 85px;
  top: 0;
  left: 50%;
  margin-left: -200px;
  z-index: 20;
  -webkit-transition: opacity 600ms ease-out;
  -moz-transition: opacity 600ms ease-out;
  transition: opacity 600ms ease-out;
  text-align: center; }
  .title.hide {
    opacity: 0; }
  .title > div {
    position: relative;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
    top: 60%; }
  .title h1, .title h2, .title h3, .title h4, .title h5, .title h6 {
    color: #fff;
    font-weight: 300;
    padding-left: 42px;
    padding-right: 42px; }
  .title h1 {
    font-size: 2.25em;
    margin-bottom: 7px; }
  .title h2 {
    font-size: 1.875em;
    margin-bottom: 7px; }
  .title h3 {
    font-size: 1em;
    margin-bottom: 0; }
  .title h6 {
    color: #f16736; }
    .title h6 a {
      font-family: "Roboto", serif; }

.title-home {
  margin-top: 1em;
  width: 450px;
  margin-left: -225px;
  position: absolute; }
  .title-home > div {
    top: 0;
    -webkit-transform: none;
    -moz-transform: none;
    -ms-transform: none;
    -o-transform: none;
    transform: none; }
  @media screen and (max-width: 925px) {
    .title-home {
      width: 100%;
      height: auto;
      left: 0;
      margin-left: 0;
      margin-top: 85px;
      font-size: 75%; } }
  .title-home h1 {
    font-size: 3.125em;
    margin-bottom: 7px; }
  .title-home h3 {
    font-family: "Roboto", serif;
    text-transform: uppercase;
    letter-spacing: 5px;
    text-indent: 5px;
    font-weight: 100;
    font-size: 0.9375em;
    line-height: 18px;
    margin-bottom: 15px; }

.title-about {
  height: 127.5px;
  background-color: rgba(35, 31, 32, 0.65);
  -webkit-transition: -webkit-transform 1s cubic-bezier(0.075, 0.82, 0.165, 1);
  -moz-transition: -moz-transform 1s cubic-bezier(0.075, 0.82, 0.165, 1);
  transition: transform 1s cubic-bezier(0.075, 0.82, 0.165, 1); }
  .title-about:after {
    content: '';
    display: block;
    position: absolute;
    bottom: -42.5px;
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 42.5px 200px 0 200px;
    border-color: rgba(35, 31, 32, 0.65) transparent transparent transparent;
    z-index: -1; }
  .title-about.scrolled {
    -webkit-transition: -webkit-transform 2.5s cubic-bezier(0.075, 0.82, 0.165, 1);
    -moz-transition: -moz-transform 2.5s cubic-bezier(0.075, 0.82, 0.165, 1);
    transition: transform 2.5s cubic-bezier(0.075, 0.82, 0.165, 1);
    -webkit-transform: translateY(-212.5px);
    -moz-transform: translateY(-212.5px);
    -ms-transform: translateY(-212.5px);
    -o-transform: translateY(-212.5px);
    transform: translateY(-212.5px); }
  @media screen and (max-width: 925px) {
    .title-about {
      position: static;
      width: 100%;
      height: auto;
      margin-left: 0;
      padding-top: 7.3125em;
      padding-bottom: 2em;
      background-color: #231f20; }
      .title-about > div {
        top: 0;
        -webkit-transform: none;
        -moz-transform: none;
        -ms-transform: none;
        -o-transform: none;
        transform: none; }
      .title-about:after {
        display: none; } }
  .title-about .title-section-about {
    margin-top: 15px;
    margin-bottom: 0; }
    .title-about .title-section-about li:not(:last-child) {
      border-right: 2px solid #3e3739; }
    .title-about .title-section-about li {
      padding-left: 7px;
      padding-right: 7px;
      font-size: 0.8125em;
      letter-spacing: 2px;
      font-family: "Roboto", serif;
      color: #979797;
      text-transform: uppercase; }
    .title-about .title-section-about a {
      font-family: "Roboto", serif;
      color: #f16736; }
  .title-about .title-nav {
    display: block;
    position: absolute;
    top: 50%;
    margin-top: -25px;
    width: 18px;
    height: 34px;
    opacity: 0.6;
    -webkit-transition: all 0.3s ease;
    -moz-transition: all 0.3s ease;
    transition: all 0.3s ease; }
    .title-about .title-nav.title-prev {
      background: url("/static/images/connections_arrow_left.png") no-repeat center;
      left: 15px; }
    .title-about .title-nav.title-next {
      background: url("/static/images/connections_arrow_right.png") no-repeat center;
      right: 15px; }
    .title-about .title-nav:hover {
      opacity: 1; }

.prod-icon {
  display: block;
  height: 22px;
  width: 22px; }
  .prod-icon svg {
    width: 100%;
    height: 100%; }
    .prod-icon svg .a {
      fill: #979797; }
  .prod-icon.active svg .a {
    fill: #f16736; }

.prod-list .row {
  display: block; }
  .prod-list .row::after {
    clear: both;
    content: "";
    display: table; }

.prod-list .prod-list-loc {
  text-align: left;
  line-height: 30px;
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 31.7615656014%; }
  .prod-list .prod-list-loc:last-child {
    margin-right: 0; }
  @media screen and (max-width: 35.5em) {
    .prod-list .prod-list-loc {
      float: left;
      display: block;
      margin-right: 7.4229703521%;
      width: 73.144257412%;
      margin-right: 0;
      margin-bottom: 0;
      line-height: 20px; }
      .prod-list .prod-list-loc:last-child {
        margin-right: 0; } }

.prod-list .prod-list-call-sign {
  text-align: center;
  line-height: 30px;
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 14.7019570017%; }
  .prod-list .prod-list-call-sign:last-child {
    margin-right: 0; }
  @media screen and (max-width: 35.5em) {
    .prod-list .prod-list-call-sign {
      width: 25%;
      margin-right: 0;
      text-align: right;
      margin-bottom: 5px;
      float: right; } }

.prod-list .prod-list-title {
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 48.821174201%; }
  .prod-list .prod-list-title:last-child {
    margin-right: 0; }
  .prod-list .prod-list-title h5 {
    color: #f16736; }

@media screen and (max-width: 35.5em) {
  .prod-list .prod-list-loc, .prod-list .prod-list-call-sign {
    font-size: 90%;
    line-height: 20px; }
  .prod-list .prod-list-title {
    width: 100%; }
  .prod-list .prod-list-title {
    margin-bottom: 1.5em; } }

.prod-grid {
  width: 100%; }

.prod-grid-row {
  display: table;
  width: 100%;
  table-layout: fixed; }

.prod-grid-item {
  display: table-cell;
  width: 33.3333333333%;
  position: relative;
  overflow: hidden;
  height: 50vh; }
  .prod-grid-item:before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #231f20;
    opacity: 0.45;
    -webkit-transition: all 1.5s cubic-bezier(0.19, 1, 0.22, 1);
    -moz-transition: all 1.5s cubic-bezier(0.19, 1, 0.22, 1);
    transition: all 1.5s cubic-bezier(0.19, 1, 0.22, 1); }
  .prod-grid-item:hover {
    cursor: pointer; }
    .prod-grid-item:hover > .prod-item-bg {
      -webkit-transform: scale(1.05);
      -moz-transform: scale(1.05);
      -ms-transform: scale(1.05);
      -o-transform: scale(1.05);
      transform: scale(1.05); }
    .prod-grid-item:hover > .prod-item-link {
      text-decoration: none; }
    .prod-grid-item:hover:before {
      opacity: 0; }
  @media screen and (max-width: 48em) {
    .prod-grid-item {
      float: left;
      display: block;
      margin-right: 7.4229703521%;
      width: 100%; }
      .prod-grid-item:last-child {
        margin-right: 0; } }
  .prod-grid-item > .prod-item-bg {
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
    z-index: -1;
    -webkit-transform: scale(1);
    -moz-transform: scale(1);
    -ms-transform: scale(1);
    -o-transform: scale(1);
    transform: scale(1);
    -webkit-transition: all 1.5s cubic-bezier(0.19, 1, 0.22, 1);
    -moz-transition: all 1.5s cubic-bezier(0.19, 1, 0.22, 1);
    transition: all 1.5s cubic-bezier(0.19, 1, 0.22, 1);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; }
  .prod-grid-item > .prod-item-link {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    color: #fff;
    font-family: "Roboto", serif; }
    .prod-grid-item > .prod-item-link > .prod-item-content {
      position: absolute;
      bottom: 10%;
      width: 90%;
      margin-left: 5%;
      text-align: center; }
      .prod-grid-item > .prod-item-link > .prod-item-content > span {
        display: block; }
      .prod-grid-item > .prod-item-link > .prod-item-content > .prod-item-title {
        text-transform: uppercase;
        font-weight: 400;
        font-size: 1.1875em;
        letter-spacing: 7px;
        line-height: 35px; }
      .prod-grid-item > .prod-item-link > .prod-item-content > .prod-item-loc {
        font-weight: 100;
        font-size: 1em;
        letter-spacing: 1.5px;
        line-height: 22px; }

.template-production > #view > .prod-content {
  padding-top: 0; }

@media screen and (max-width: 35.5em) {
  .prod-description {
    margin-bottom: 1000px; } }

.prod-description > .container.with-logo {
  padding-top: 8em; }

.prod-description .rich-text {
  padding-bottom: 2em; }

.prod-description .prod-logo {
  position: absolute;
  top: -75px;
  background-color: #fff;
  border: 1px solid #979797;
  left: 0;
  right: 0;
  margin: 0 auto; }

.prod-description .prod-team {
  width: 75%;
  position: absolute;
  left: 50%;
  -webkit-transform: translateX(-50%);
  -moz-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  -o-transform: translateX(-50%);
  transform: translateX(-50%); }
  @media screen and (max-width: 35.5em) {
    .prod-description .prod-team {
      width: 100%; } }

.post-item {
  width: 100%;
  position: relative;
  overflow: hidden;
  height: 50vh; }
  .post-item:before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #231f20;
    opacity: 0.35;
    z-index: 2;
    -webkit-transition: all 1.5s cubic-bezier(0.19, 1, 0.22, 1);
    -moz-transition: all 1.5s cubic-bezier(0.19, 1, 0.22, 1);
    transition: all 1.5s cubic-bezier(0.19, 1, 0.22, 1); }
    @media screen and (max-width: 35.5em) {
      .post-item:before {
        opacity: 0; } }
  .post-item:after {
    content: '';
    display: block;
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 60%;
    background-image: -webkit-linear-gradient(bottom, rgba(21, 19, 19, 0.75) 0%, transparent 100%);
    background-image: linear-gradient(to top, rgba(21, 19, 19, 0.75) 0%, transparent 100%); }
  .post-item:hover {
    cursor: pointer; }
    .post-item:hover > .post-item-bg {
      -webkit-transform: scale(1.05);
      -moz-transform: scale(1.05);
      -ms-transform: scale(1.05);
      -o-transform: scale(1.05);
      transform: scale(1.05); }
    .post-item:hover > .post-item-link {
      text-decoration: none; }
    .post-item:hover:before {
      opacity: 0; }
  @media screen and (max-width: 48em) {
    .post-item {
      float: left;
      display: block;
      margin-right: 7.4229703521%;
      width: 100%; }
      .post-item:last-child {
        margin-right: 0; } }
  .post-item > .post-item-bg {
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
    -webkit-transform: scale(1);
    -moz-transform: scale(1);
    -ms-transform: scale(1);
    -o-transform: scale(1);
    transform: scale(1);
    -webkit-transition: all 1.5s cubic-bezier(0.19, 1, 0.22, 1);
    -moz-transition: all 1.5s cubic-bezier(0.19, 1, 0.22, 1);
    transition: all 1.5s cubic-bezier(0.19, 1, 0.22, 1);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; }
  .post-item > .post-item-link {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    color: #fff;
    font-family: "Roboto", serif;
    z-index: 3; }
    .post-item > .post-item-link > .post-item-content {
      position: absolute;
      bottom: 10%;
      width: 90%;
      margin-left: 5%;
      text-align: center; }
      .post-item > .post-item-link > .post-item-content > span {
        display: block; }
      .post-item > .post-item-link > .post-item-content .post-item-list li {
        padding-left: 10px;
        padding-right: 10px; }
        .post-item > .post-item-link > .post-item-content .post-item-list li, .post-item > .post-item-link > .post-item-content .post-item-list li span {
          line-height: 18px; }
        .post-item > .post-item-link > .post-item-content .post-item-list li:not(:last-child) {
          border-right: 1px solid #fff; }
      .post-item > .post-item-link > .post-item-content .post-item-title {
        text-transform: uppercase;
        font-weight: 400;
        font-size: 1.25em;
        letter-spacing: 7px;
        line-height: 28px;
        margin-bottom: 10px; }
      .post-item > .post-item-link > .post-item-content .post-item-loc,
      .post-item > .post-item-link > .post-item-content .post-item-date,
      .post-item > .post-item-link > .post-item-content .post-item-desc {
        font-weight: 100;
        font-size: 0.9375em;
        letter-spacing: 1.5px;
        line-height: 22px; }

.connection-prods {
  margin-top: 4em;
  text-align: center; }

.connection-more {
  text-align: center; }
  .connection-more > .container {
    padding-top: 2em;
    padding-bottom: 2em; }

.hero-section {
  height: 100vh;
  position: relative; }
  .hero-section.hero-section-3by4 {
    height: 75vh; }
  .hero-section .hero-section-caption {
    position: absolute;
    top: calc(100% + 5px);
    right: 10px; }
    .hero-section .hero-section-caption .rich-text p, .hero-section .hero-section-caption .rich-text a {
      font-family: "Roboto", serif;
      font-style: italic;
      color: #7d7e81; }
    .hero-section .hero-section-caption .rich-text p {
      font-size: 90%; }
    .hero-section .hero-section-caption .rich-text a {
      text-decoration: underline; }

#preview {
  z-index: 8; }

#main-video {
  display: block;
  z-index: 7;
  background-color: #000; }

#youtube-embed {
  width: 100%;
  height: 100%; }

#video-overlay {
  position: absolute;
  top: 7%;
  width: 100%;
  height: 80%;
  z-index: 10; }

.full-bg-video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%; }
  @media screen and (max-width: 48em) {
    .full-bg-video {
      display: none; } }

.full-bg-image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover; }
  .full-bg-image.full-bg-mobile {
    display: none; }
    @media screen and (max-width: 48em) {
      .full-bg-image.full-bg-mobile {
        display: block; } }

.play-icon {
  background: url("/static/images/play.png") no-repeat center;
  opacity: 0;
  -webkit-transition: all 600ms ease-out;
  -moz-transition: all 600ms ease-out;
  transition: all 600ms ease-out;
  width: 61px;
  height: 88px;
  position: absolute;
  margin: auto;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: 15;
  display: none; }
  .play-icon.show {
    display: block;
    opacity: 0.8;
    -webkit-transition: all 300ms ease-out;
    -moz-transition: all 300ms ease-out;
    transition: all 300ms ease-out; }
  .play-icon.pause {
    background: url("/static/images/pause.png") no-repeat center; }
  .play-icon:hover {
    opacity: 1;
    cursor: pointer; }

.view-more {
  position: absolute;
  left: 50%;
  -webkit-transform: translateX(-50%);
  -moz-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  -o-transform: translateX(-50%);
  transform: translateX(-50%);
  -webkit-transition: opacity 300ms ease-out;
  -moz-transition: opacity 300ms ease-out;
  transition: opacity 300ms ease-out;
  bottom: 7vh;
  width: 150px;
  height: 70px;
  background: url("/static/images/live_feed.svg") no-repeat bottom center;
  background-size: 60% 30%;
  z-index: 18;
  color: #fff;
  font-family: "Roboto", serif;
  font-size: 1em;
  text-align: center;
  letter-spacing: 4px;
  font-weight: 100;
  opacity: 0.6; }
  @media screen and (max-width: 35.5em) {
    .view-more {
      bottom: 15vh; } }
  .view-more:hover {
    cursor: pointer;
    opacity: 1; }
  .view-more.hide {
    opacity: 0; }

.after-link {
  background-color: rgba(0, 0, 0, 0.8);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  -webkit-transition: opacity 600ms ease-out;
  -moz-transition: opacity 600ms ease-out;
  transition: opacity 600ms ease-out;
  z-index: -1;
  opacity: 0; }
  .after-link.show {
    z-index: 17;
    opacity: 1; }
  .after-link > div {
    position: relative;
    width: 100%;
    height: 100%; }
  .after-link a {
    display: table;
    text-align: center;
    font-size: 1.875em;
    position: relative;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -moz-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    -o-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%); }

.social-links {
  display: table;
  margin: 0 auto; }
  .template-production .social-links {
    padding-bottom: 2em; }
  .social-links li {
    padding-left: 7px;
    padding-right: 7px; }
  .social-links .social-link {
    display: block;
    width: 22px;
    height: 22px;
    background: url("/static/images/social/link.svg");
    background-repeat: no-repeat;
    background-position: center;
    background-size: auto 100%;
    background-size: cover; }
    .social-links .social-link.social-link-instagram {
      background: url("/static/images/social/instagram.svg") no-repeat center;
      background-size: auto 100%; }
    .social-links .social-link.social-link-twitter {
      background: url("/static/images/social/twitter.svg") no-repeat center;
      background-size: auto 100%; }
    .social-links .social-link.social-link-email {
      background: url("/static/images/social/email.svg") no-repeat center;
      background-size: auto 100%; }
    .social-links .social-link.social-link-soundcloud {
      background: url("/static/images/social/soundcloud.svg") no-repeat center;
      background-size: 100%; }
    .social-links .social-link.social-link-vimeo {
      background: url("/static/images/social/vimeo.svg") no-repeat center;
      background-size: auto 100%; }
    .social-links .social-link.social-link-youtube {
      background: url("/static/images/social/youtube.svg") no-repeat center;
      background-size: auto 100%; }
    .social-links .social-link.social-link-tumblr {
      background: url("/static/images/social/tumblr.svg") no-repeat center;
      background-size: auto 100%; }
    .social-links .social-link.social-link-facebook {
      background: url("/static/images/social/facebook.svg") no-repeat center;
      background-size: auto 100%; }

.section-dispatches {
  background-color: #d8d8d8;
  padding-bottom: 4em; }

.dispatch-item-wrapper {
  max-width: 48em;
  margin-left: auto;
  margin-right: auto;
  -webkit-box-shadow: 0px 3px 6px 0px rgba(0, 0, 0, 0.5);
  -moz-box-shadow: 0px 3px 6px 0px rgba(0, 0, 0, 0.5);
  box-shadow: 0px 3px 6px 0px rgba(0, 0, 0, 0.5);
  margin-bottom: 5em; }
  .dispatch-item-wrapper::after {
    clear: both;
    content: "";
    display: table; }
  .dispatch-item-wrapper:first-of-type {
    position: relative;
    top: -5em;
    margin-bottom: 0; }
    @media screen and (max-width: 925px) {
      .dispatch-item-wrapper:first-of-type {
        top: 0;
        margin-bottom: 5em; } }

#dispatch .modal-content:before {
  content: '';
  display: block;
  position: absolute;
  width: 289px;
  height: 21px;
  background: url("/static/images/loader_dark.gif") no-repeat center;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%);
  -moz-transform: translate(-50%);
  -ms-transform: translate(-50%);
  -o-transform: translate(-50%);
  transform: translate(-50%);
  z-index: 1; }
  @media screen and (max-width: 35.5em) {
    #dispatch .modal-content:before {
      width: 150px; } }

#dispatch .modal-body {
  padding-bottom: 56.25%;
  background: rgba(0, 0, 0, 0.5); }
  #dispatch .modal-body iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 1px solid rgba(0, 0, 0, 0.2);
    -webkit-box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);
    box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);
    z-index: 10; }

#dispatch .dispatch-arrow {
  display: block;
  width: 44px;
  height: 84px;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  -o-transform: translateY(-50%);
  transform: translateY(-50%);
  opacity: 0.6;
  -webkit-transition: all 200ms ease;
  -moz-transition: all 200ms ease;
  transition: all 200ms ease;
  display: none; }
  #dispatch .dispatch-arrow.show {
    display: block; }
  #dispatch .dispatch-arrow:hover {
    cursor: pointer;
    opacity: 1; }
  #dispatch .dispatch-arrow.dispatch-prev {
    background: url("/static/images/dispatch_prev.png") no-repeat center;
    background-size: 75%;
    left: 1.5%; }
  #dispatch .dispatch-arrow.dispatch-next {
    background: url("/static/images/dispatch_next.png") no-repeat center;
    background-size: 75%;
    right: 1.5%; }
  @media screen and (max-width: 35.5em) {
    #dispatch .dispatch-arrow {
      top: 75%; }
      #dispatch .dispatch-arrow.dispatch-prev {
        left: 25%; }
      #dispatch .dispatch-arrow.dispatch-next {
        right: 25%; } }

#search .modal-content {
  box-shadow: none;
  border: none; }

#search .search-form {
  margin-bottom: 50px; }
  @media screen and (max-width: 35.5em) {
    #search .search-form {
      font-size: 75%; } }
  #search .search-form form {
    position: relative;
    width: 100%;
    height: 4em;
    padding-bottom: 5px;
    border-bottom: 2px solid #fff; }
    #search .search-form form input {
      position: absolute;
      height: 100%;
      display: inline-block;
      border: 0;
      background-color: transparent;
      font-size: 1.5em;
      font-family: "Roboto";
      font-weight: 100;
      line-height: 1.53333333;
      color: #fff; }
      #search .search-form form input:focus {
        outline: none; }
      #search .search-form form input[type="text"] {
        width: 85%; }
      #search .search-form form input[type="submit"] {
        height: 70%;
        top: 15%;
        right: 0;
        padding: .4em .8em;
        font-family: "Roboto Slab", serif;
        font-size: 1.125em;
        border-radius: 5px;
        margin-bottom: 0;
        font-weight: normal;
        text-align: center;
        vertical-align: middle;
        -ms-touch-action: manipulation;
        touch-action: manipulation;
        cursor: pointer;
        background-image: none;
        border: 1px solid #fff;
        white-space: nowrap;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none; }
        #search .search-form form input[type="submit"]:hover {
          background: #fff;
          color: #000; }

#search .search-results .search-results-item {
  margin: 0 auto 25px auto;
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto; }
  #search .search-results .search-results-item::after {
    clear: both;
    content: "";
    display: table; }

#search .search-results a, #search .search-results h5, #search .search-results p, #search .search-results span {
  color: #fff;
  margin-bottom: 0; }

#search .search-results span {
  font-family: "Roboto", serif;
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 23.2317613015%; }
  #search .search-results span:last-child {
    margin-right: 0; }

#search .search-results h5 {
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 74.4105871005%; }
  #search .search-results h5:last-child {
    margin-right: 0; }

@media screen and (max-width: 35.5em) {
  #search .search-results span, #search .search-results h5 {
    width: 100%; } }

#intro {
  position: fixed;
  height: 100vh;
  width: 100vw;
  top: 0;
  left: 0;
  z-index: 2000;
  display: none; }
  #intro > .intro-section {
    background-color: rgba(0, 0, 0, 0.6);
    border-right: 1px solid #000;
    color: #fff;
    height: 100%;
    width: 60%;
    -webkit-transition: all 750ms cubic-bezier(0.075, 0.82, 0.165, 1);
    -moz-transition: all 750ms cubic-bezier(0.075, 0.82, 0.165, 1);
    transition: all 750ms cubic-bezier(0.075, 0.82, 0.165, 1);
    -webkit-transform: translate3d(-100%, 0, 0);
    -moz-transform: translate3d(-100%, 0, 0);
    -ms-transform: translate3d(-100%, 0, 0);
    -o-transform: translate3d(-100%, 0, 0);
    transform: translate3d(-100%, 0, 0); }
    #intro > .intro-section.show {
      -webkit-transform: translate3d(0, 0, 0);
      -moz-transform: translate3d(0, 0, 0);
      -ms-transform: translate3d(0, 0, 0);
      -o-transform: translate3d(0, 0, 0);
      transform: translate3d(0, 0, 0); }
    @media screen and (min-width: 64em) {
      #intro > .intro-section {
        width: 40%; } }
    @media screen and (max-width: 35.5em) {
      #intro > .intro-section {
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.9);
        border-right: none; } }
    #intro > .intro-section > .intro-content {
      width: 100%;
      padding: 3em 1.5em 0 1.5em;
      position: absolute;
      bottom: 14em; }
      @media screen and (min-height: 800px) {
        #intro > .intro-section > .intro-content {
          padding: 0 1.5em;
          bottom: 6em;
          position: absolute;
          top: 50%;
          -webkit-transform: translateY(-50%);
          -ms-transform: translateY(-50%);
          transform: translateY(-50%); } }
      @media screen and (max-width: 35.5em) {
        #intro > .intro-section > .intro-content {
          padding: 1em 1.5em;
          bottom: 12em; }
          #intro > .intro-section > .intro-content > .rich-text > p {
            margin: 1em 0;
            font-size: 80%; } }
      #intro > .intro-section > .intro-content > img {
        width: 50%;
        max-width: 400px;
        height: auto;
        display: block;
        margin: 0 auto; }
      #intro > .intro-section > .intro-content .rich-text > p {
        font-size: 0.875em;
        margin: 1.5em 0; }
        @media screen and (min-height: 800px) {
          #intro > .intro-section > .intro-content .rich-text > p {
            font-size: 1em; } }
        @media screen and (max-width: 35.5em) {
          #intro > .intro-section > .intro-content .rich-text > p {
            margin: 1em 0;
            font-size: 80%; } }
      #intro > .intro-section > .intro-content > .intro-enter-btn {
        font-family: "Roboto", serif;
        font-weight: 100;
        font-size: 1.25em;
        letter-spacing: 4px;
        text-transform: uppercase;
        -webkit-transition: all 250ms ease-out;
        -moz-transition: all 250ms ease-out;
        transition: all 250ms ease-out;
        -webkit-transform-origin: left center;
        -moz-transform-origin: left center;
        -ms-transform-origin: left center;
        -o-transform-origin: left center;
        transform-origin: left center;
        display: inline-block;
        position: relative;
        left: 50%;
        -webkit-transform: translateX(-50%);
        -moz-transform: translateX(-50%);
        -ms-transform: translateX(-50%);
        -o-transform: translateX(-50%);
        transform: translateX(-50%); }
        #intro > .intro-section > .intro-content > .intro-enter-btn:hover {
          cursor: pointer;
          letter-spacing: 8px; }
        #intro > .intro-section > .intro-content > .intro-enter-btn > .enter-icon svg {
          position: relative;
          top: 13px;
          height: 40px;
          width: auto; }
    #intro > .intro-section > .intro-sponsor {
      position: absolute;
      width: 100%;
      bottom: 1.5em;
      text-align: center; }
      @media screen and (max-width: 35.5em) {
        #intro > .intro-section > .intro-sponsor {
          bottom: 6em; } }
      #intro > .intro-section > .intro-sponsor img {
        width: 13%;
        display: block;
        margin: 15px auto 0 auto; }

/*# sourceMappingURL=data:application/json;base64, */