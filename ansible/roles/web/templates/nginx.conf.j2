#{{ ansible_managed }}

server {
	listen [::]:80;
	listen 80;
	server_name {{ domain }} www.{{ domain }} findingamerica.airmedia.org www.findingamerica.airmedia.org;

	# serve ACME challenge files over HTTP
	location /.well-known/acme-challenge/ {
		alias /var/www/challenges/.well-known/acme-challenge/;
		try_files $uri @forward_https;
	}

	# redirect HTTP requests to HTTPS
	location @forward_https {
		return 301 https://www.{{ domain }}$request_uri;
	}
	location / {
		return 301 https://www.{{ domain }}$request_uri;
	}
}

# redirect HTTPS non-www to www
# also redirect the old domains to the new domain over HTTPS
server {
	listen [::]:443 ssl spdy;
	listen 443 ssl spdy;
	server_name {{ domain }} findingamerica.airmedia.org www.findingamerica.airmedia.org;

	ssl_certificate /etc/letsencrypt/live/{{ domain }}/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/{{ domain }}/key.pem;
	include /etc/nginx/ssl.conf;

	return 301 https://www.{{ domain }}$request_uri;
}

server {
	listen [::]:443 ssl spdy;
	listen 443 ssl spdy;
	server_name www.{{ domain }};

	ssl_certificate /etc/letsencrypt/live/{{ domain }}/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/{{ domain }}/key.pem;
	include /etc/nginx/ssl.conf;

	root /var/www/{{ domain }}/current;

	client_max_body_size 6m;

	location = /favicon.ico {
		alias /var/www/{{ domain }}/current/static/images/favicon.ico;
		access_log off;
		expires max;
		add_header Cache-Control "public";
	}

	location = /robots.txt {
		alias /var/www/{{ domain }}/current/robots{% if inventory_dir|basename == "staging" %}_staging{% endif %}.txt;
	}

	location /static {
		root /var/www/{{ domain }}/current;
		access_log off;
		expires max;
		add_header Cache-Control "public";
		add_header Access-Control-Allow-Origin https://www.{{ domain }};
	}

	location /media {
		alias /var/media/{{ domain }};
		access_log off;
		expires max;
		add_header Cache-Control "public";
	}

	location / {
		uwsgi_pass unix:/tmp/uwsgi-{{ domain }}.sock;
		include /etc/nginx/uwsgi_params;
	}
}
